version: '3.8'

services:
  # Zig application container
  zig-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3010:3010"
    environment:
      - "PORT=3010"
      - "AWS_REGION=us-east-1"
      - "AWS_BUCKET=test-bucket"
      - "AWS_ENDPOINT_URL=http://minio:9000"
      - "AWS_SECRET_ACCESS_KEY=minioadmin"
      - "AWS_ACCESS_KEY_ID=minioadmin"
    volumes:
      - ./src:/app/src:ro
      - ./build.zig:/app/build.zig:ro
      - ./build.zig.zon:/app/build.zig.zon:ro
      - ./crossword.map:/app/crossword.map:ro
      - ./dist:/app/dist
    depends_on:
      - web-dev
      - minio

  # Web development container (npm/vite)
  web-dev:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "8080:8080"  # Vite dev server
    volumes:
      - ./web:/app/web:ro
      - ./package.json:/app/package.json:ro
      - ./vite.config.ts:/app/vite.config.ts:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./svelte.config.js:/app/svelte.config.js:ro
      - ./eslint.config.mjs:/app/eslint.config.mjs:ro
      - ./index.html:/app/index.html:ro
    command: sh -c "npm install && VITE_APP_URL='http://localhost:3010' VITE_WS_URL='ws://localhost:3010' npm run dev -- --host 0.0.0.0"
  minio:
    image: quay.io/minio/minio:latest
    container_name: minio_server
    ports:
      - "9000:9000" # S3 API port
      - "9001:9001" # MinIO Console port    
    volumes:
      - minio_data:/data # Persistent storage for MinIO data
    environment:
      - "MINIO_ROOT_USER=minioadmin"
      - "MINIO_ROOT_PASSWORD=minioadmin"
      - "MINIO_STORAGE_USE_HTTPS=False"
    command: [ "server", "--console-address", ":9001", "/data" ]
  createbuckets:
    image: quay.io/minio/mc:latest
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set dockerminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb dockerminio/test-bucket;
      exit 0;
      "
volumes:
  minio_data: {} # Defines a named volume for data persistence
